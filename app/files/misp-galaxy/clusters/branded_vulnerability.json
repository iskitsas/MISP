{
  "values": [
    {
      "value": "Meltdown",
      "description": "Meltdown exploits the out-of-order execution feature of modern processors, allowing user-level programs to access kernel memory using processor caches as covert side channels. This is specific to the way out-of-order execution is implemented in the processors. This vulnerability has been assigned CVE-2017-5754.",
      "meta": {
        "aliases": [
          "CVE-2017-5754"
        ],
        "logo": [
          "https://upload.wikimedia.org/wikipedia/commons/thumb/5/56/Meltdown_with_text.svg/300px-Meltdown_with_text.svg.png"
        ]
      }
    },
    {
      "value": "Spectre",
      "description": "Spectre exploits the speculative execution feature that is present in almost all processors in existence today. Two variants of Spectre are known and seem to depend on what is used to influence erroneous speculative execution. The first variant triggers speculative execution by performing a bounds check bypass and has been assigned CVE-2017-5753. The second variant uses branch target injection for the same effect and has been assigned CVE-2017-5715.",
      "meta": {
        "aliases": [
          "CVE-2017-5753",
          "CVE-2017-5715"
        ],
        "logo": [
          "https://en.wikipedia.org/wiki/File:Spectre_with_text.svg"
        ]
      }
    },
    {
      "value": "Heartbleed",
      "description": "Heartbleed is a security bug in the OpenSSL cryptography library, which is a widely used implementation of the Transport Layer Security (TLS) protocol. It was introduced into the software in 2012 and publicly disclosed in April 2014. Heartbleed may be exploited regardless of whether the vulnerable OpenSSL instance is running as a TLS server or client. It results from improper input validation (due to a missing bounds check) in the implementation of the TLS heartbeat extension, thus the bug's name derives from heartbeat. The vulnerability is classified as a buffer over-read,[5] a situation where more data can be read than should be allowed.",
      "meta": {
        "aliases": [
          "CVE-2014–0160"
        ],
        "logo": [
          "https://upload.wikimedia.org/wikipedia/commons/thumb/d/dc/Heartbleed.svg/440px-Heartbleed.svg.png"
        ]
      }
    },
    {
      "value": "Shellshock",
      "description": "Shellshock, also known as Bashdoor, is a family of security bugs in the widely used Unix Bash shell, the first of which was disclosed on 24 September 2014. Many Internet-facing services, such as some web server deployments, use Bash to process certain requests, allowing an attacker to cause vulnerable versions of Bash to execute arbitrary commands. This can allow an attacker to gain unauthorized access to a computer system.",
      "meta": {
        "aliases": [
          "CVE-2014–6271"
        ],
        "logo": [
          "https://upload.wikimedia.org/wikipedia/commons/thumb/4/44/Shellshock-bug.png/440px-Shellshock-bug.png",
          "https://upload.wikimedia.org/wikipedia/commons/8/86/Shellshock.png",
          "https://cdn-images-1.medium.com/max/1600/1*bopQcJtKouPOJ_isSzanLw.png"
        ]
      }
    },
    {
      "value": "Ghost",
      "description": "The GHOST vulnerability is a serious weakness in the Linux glibc library. It allows attackers to remotely take complete control of the victim system without having any prior knowledge of system credentials. CVE-2015-0235 has been assigned to this issue.\nDuring a code audit Qualys researchers discovered a buffer overflow in the __nss_hostname_digits_dots() function of glibc. This bug can be triggered both locally and remotely via all the gethostbyname*() functions. Applications have access to the DNS resolver primarily through the gethostbyname*() set of functions. These functions convert a hostname into an IP address.",
      "meta": {
        "aliases": [
          "CVE-2015–0235"
        ],
        "logo": [
          "https://cdn-images-1.medium.com/max/1600/1*HnCEOo0RUT1fliJjRT02lA.png"
        ]
      }
    },
    {
      "value": "Stagefright",
      "description": "Stagefright is the name given to a group of software bugs that affect versions 2.2 (\"Froyo\") and newer of the Android operating system. The name is taken from the affected library, which among other things, is used to unpack MMS messages. Exploitation of the bug allows an attacker to perform arbitrary operations on the victim's device through remote code execution and privilege escalation. Security researchers demonstrate the bugs with a proof of concept that sends specially crafted MMS messages to the victim device and in most cases requires no end-user actions upon message reception to succeed—the user doesn’t have to do anything to ‘accept’ the bug, it happens in the background. The phone number is the only target information.",
      "meta": {
        "aliases": [
          "CVE-2015-1538",
          "CVE-2015-1539",
          "CVE-2015-3824",
          "CVE-2015-3826",
          "CVE-2015-3827",
          "CVE-2015-3828",
          "CVE-2015-3829",
          "CVE-2015-3864"
        ],
        "logo": [
          "https://upload.wikimedia.org/wikipedia/en/f/f2/Stagefright_bug_logo.png",
          "https://cdn-images-1.medium.com/max/1600/1*-Ivm3lZHNaOUwmklT4Rb1g.png"
        ]
      }
    },
    {
      "value": "Badlock",
      "description": "Badlock is a security bug disclosed on April 12, 2016 affecting the Security Account Manager (SAM) and Local Security Authority (Domain Policy) (LSAD) remote protocols[1] supported by Windows and Samba servers.",
      "meta": {
        "logo": [
          "https://upload.wikimedia.org/wikipedia/commons/thumb/4/4b/Badlock_logo.svg/440px-Badlock_logo.svg.png",
          "https://cdn-images-1.medium.com/max/1600/1*EVbwwxEBOU83NKxgQrPG9w.png"
        ]
      }
    },
    {
      "value": "Dirty COW",
      "description": "Dirty COW (Dirty copy-on-write) is a computer security vulnerability for the Linux kernel that affects all Linux-based operating systems including Android. It is a local privilege escalation bug that exploits a race condition in the implementation of the copy-on-write mechanism in the kernel's memory-management subsystem. The vulnerability was discovered by Phil Oester. Because of the race condition, with the right timing, a local attacker can exploit the copy-on-write mechanism to turn a read-only mapping of a file into a writable mapping. Although it is a local privilege escalation, remote attackers can use it in conjunction with other exploits that allow remote execution of non-privileged code to achieve remote root access on a computer. The attack itself does not leave traces in the system log.",
      "meta": {
        "aliases": [
          "CVE-2016-5195"
        ],
        "logo": [
          "https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/DirtyCow.svg/440px-DirtyCow.svg.png"
        ]
      }
    },
    {
      "value": "POODLE",
      "description": "The POODLE attack (which stands for \"Padding Oracle On Downgraded Legacy Encryptio\") is a man-in-the-middle exploit which takes advantage of Internet and security software clients' fallback to SSL 3.0. If attackers successfully exploit this vulnerability, on average, they only need to make 256 SSL 3.0 requests to reveal one byte of encrypted messages. Bodo Möller, Thai Duong and Krzysztof Kotowicz from the Google Security Team discovered this vulnerability; they disclosed the vulnerability publicly on October 14, 2014 (despite the paper being dated \"September 2014\" ). Ivan Ristic does not consider the POODLE attack as serious as the Heartbleed and Shellshock attacks. On December 8, 2014 a variation of the POODLE vulnerability that affected TLS was announced.",
      "meta": {
        "aliases": [
          "CVE-2014-3566"
        ]
      }
    },
    {
      "value": "BadUSB",
      "description": "The ‘BadUSB’ vulnerability exploits unprotected firmware in order to deliver malicious code to computers and networks. This is achieved by reverse-engineering the device and reprogramming it. As the reprogrammed firmware is not monitored or assessed by modern security software, this attack method is extremely difficult for antivirus/security software to detect and prevent."
    },
    {
      "value": "ImageTragick",
      "meta": {
        "aliases": [
          "CVE-2016–3714"
        ],
        "logo": [
          "https://imagetragick.com/img/logo-medium.png"
        ]
      }
    }
  ],
  "version": 1,
  "uuid": "93715a12-f45b-11e7-bcf9-3767161e9ebd",
  "description": "List of known vulnerabilities and attacks with a branding",
  "authors": [
    "Unknown"
  ],
  "source": "Open Sources",
  "type": "branded-vulnerability",
  "name": "Branded Vulnerability"
}
